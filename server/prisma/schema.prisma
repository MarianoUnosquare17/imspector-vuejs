generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account_game {
  id                Int      @id(map: "id_acc_games_pk") @default(autoincrement())
  map               String   @db.VarChar
  mode              String   @db.VarChar
  agent             String   @db.VarChar
  date_played       DateTime @db.Date
  score             Int
  money_spent_game  Int
  money_spent_round Int
  kills             Int
  deaths            Int
  assists           Int
  bodyshots         Int
  headshots         Int
  legshots          Int
}

model accounts {
  account_id            Int                     @id(map: "id_account_pk") @default(autoincrement())
  username              String                  @db.VarChar
  email                 String                  @db.VarChar
  password              String                  @db.VarChar
  player_match_comments player_match_comments[]
}

model agents {
  agent_id Int    @id(map: "id_agent_pk") @default(autoincrement())
  name     String @db.VarChar
}

model comments {
  comment_id      Int      @id(map: "id_game_comment_pk") @default(autoincrement())
  comment         String   @db.VarChar
  player_match_id Int
  date_created    DateTime @db.Date
  created_by      String   @db.VarChar
}

model flyway_schema_history {
  installed_rank Int      @id(map: "flyway_schema_history_pk")
  version        String?  @db.VarChar(50)
  description    String   @db.VarChar(200)
  type           String   @db.VarChar(20)
  script         String   @db.VarChar(1000)
  checksum       Int?
  installed_by   String   @db.VarChar(100)
  installed_on   DateTime @default(now()) @db.Timestamp(6)
  execution_time Int
  success        Boolean

  @@index([success], map: "flyway_schema_history_s_idx")
}

model maps {
  map_id Int    @id(map: "id_map_pk") @default(autoincrement())
  name   String @db.VarChar
}

model match_history {
  id          Int      @id(map: "id_match_pk") @default(autoincrement())
  score       Int
  date_played DateTime @db.Date
  map         String   @db.VarChar
  kills       Int
  deaths      Int
  assists     Int
  mode        String   @db.VarChar
}

model modes {
  mode_id Int    @id(map: "id_mode_pk") @default(autoincrement())
  name    String @db.VarChar
}

model player_match_comments {
  id              Int             @id(map: "comments_pk") @default(autoincrement())
  comment         String?
  date_created    DateTime?       @db.Timestamp(6)
  player_match_id Int?
  created_by      Int?
  accounts        accounts?       @relation(fields: [created_by], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "player_match_comments_accounts_account_id")
  player_matches  player_matches? @relation(fields: [player_match_id], references: [match_id], onDelete: NoAction, onUpdate: NoAction, map: "player_match_comments_player_matches_player_match_id")
}

model player_match_modes {
  id   Int     @id(map: "modes_pk") @default(autoincrement())
  name String?
}

model player_matches {
  match_id              Int                     @id(map: "id_acc_match_pk") @default(autoincrement())
  score                 Int
  date_played           DateTime                @db.Date
  kills                 Int
  deaths                Int
  assists               Int
  money_spent           Int
  bodyshots             Int
  headshots             Int
  legshots              Int
  agent_id              Int
  map_id                Int
  player_id             Int
  player_match_mode_id  Int
  player_match_comments player_match_comments[]
}

model player_stats {
  id               Int    @id(map: "id_player_pk") @default(autoincrement())
  valorant_account String @db.VarChar
  valorant_tag     String @db.VarChar
  level            Int
  region           String @db.VarChar
  player_card      String @db.VarChar
}

model players {
  player_id        Int    @id(map: "id_players_pk") @default(autoincrement())
  valorant_account String @db.VarChar
  valorant_tag     String @db.VarChar
  level            Int
  region           String @db.VarChar
}

model tactics {
  id      Int    @id(map: "id_tactics_pk") @default(autoincrement())
  made_by String @db.VarChar
  map     String @db.VarChar
  agent   String @db.VarChar
  tactic  String @db.VarChar
}

model user_account {
  id               Int    @id(map: "id_pk") @default(autoincrement())
  username         String @db.VarChar
  user_email       String @db.VarChar
  user_password    String @db.VarChar
  valorant_account String @db.VarChar
  valorant_tag     String @db.VarChar
}

model user_account_comments {
  id              Int      @id(map: "id_acc_comment_pk") @default(autoincrement())
  date_created    DateTime @db.Date
  made_by         String   @db.VarChar
  account_comment String   @db.VarChar
}

model user_game_comments {
  id              Int      @id(map: "id_game_comments_pk") @default(autoincrement())
  date_created    DateTime @db.Date
  made_by         String   @db.VarChar
  account_comment String   @db.VarChar
}
